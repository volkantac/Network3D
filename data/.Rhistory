token <- 'oS5ZkHgStBhtqr0QancKymLmL9lETZyHaoKcKMxqUHPRQZmeEQpJeJUcnp6AP6o2'
genius_get_artists = function(artist_name, n_results = 10) {
baseURL <- 'https://api.genius.com/search?q='
requestURL <- paste0(baseURL, gsub(' ', '%20', artist_name),
'&per_page=', n_results,
'&access_token=', token)
res <- GET(requestURL) %>% content %>% .$response %>% .$hits
map_df(1:length(res), function(x) {
tmp <- res[[x]]$result$primary_artist
list(
artist_id = tmp$id,
artist_name = tmp$name
)
}) %>% unique
}
genius_artists <- genius_get_artists('radiohead')
genius_artists
genius_artists <- genius_get_artists('radiohead')
genius_artists
genius_get_artists = function(artist_name, n_results = 10) {
baseURL <- 'https://api.genius.com/search?q='
requestURL <- paste0(baseURL, gsub(' ', '%20', artist_name),
'&per_page=', n_results,
'&access_token=', token)
res <- GET(requestURL) %>% content %>% .$response %>% .$hits
map_df(1:length(res), function(x) {
tmp <- res[[x]]$result$primary_artist
list(
artist_id = tmp$id,
artist_name = tmp$name
)
}) %>% unique
}
genius_artists <- genius_get_artists('radiohead')
token <- 'oS5ZkHgStBhtqr0QancKymLmL9lETZyHaoKcKMxqUHPRQZmeEQpJeJUcnp6AP6o2'
genius_get_artists = function(artist_name, n_results = 10) {
baseURL <- 'https://genius.com/artists/'
requestURL <- paste0(baseURL, gsub(' ', '%20', artist_name),
'&per_page=', n_results,
'&access_token=', token)
res <- GET(requestURL) %>% content %>% .$response %>% .$hits
map_df(1:length(res), function(x) {
tmp <- res[[x]]$result$primary_artist
list(
artist_id = tmp$id,
artist_name = tmp$name
)
}) %>% unique
}
genius_artists <- genius_get_artists('radiohead')
genius_artists
token <- 'oS5ZkHgStBhtqr0QancKymLmL9lETZyHaoKcKMxqUHPRQZmeEQpJeJUcnp6AP6o2'
genius_get_artists = function(artist_name, n_results = 10) {
baseURL <- 'https://api.genius.com/search?q='
requestURL <- paste0(baseURL, gsub(' ', '%20', artist_name),
'&per_page=', n_results,
'&access_token=', token)
res <- GET(requestURL) %>% content %>% .$response %>% .$hits
map_df(1:length(res), function(x) {
tmp <- res[[x]]$result$primary_artist
list(
artist_id = tmp$id,
artist_name = tmp$name
)
}) %>% unique
}
genius_artists <- genius_get_artists('radiohead')
genius_artists
token <- 'vFtVDrB28e2S5J6rZn3OM6F8R8JmrjQLH5GFuLdPwAmiuDAco42zwaGAtYcqBDBC'
genius_get_artists = function(artist_name, n_results = 10) {
baseURL <- 'https://api.genius.com/search?q='
requestURL <- paste0(baseURL, gsub(' ', '%20', artist_name),
'&per_page=', n_results,
'&access_token=', token)
res <- GET(requestURL) %>% content %>% .$response %>% .$hits
map_df(1:length(res), function(x) {
tmp <- res[[x]]$result$primary_artist
list(
artist_id = tmp$id,
artist_name = tmp$name
)
}) %>% unique
}
genius_artists <- genius_get_artists('radiohead')
genius_artists
rnorm(12)
rnorm(12)
install.packages('RJSONIO')
geocodeAdddress <- function(address) {
require(RJSONIO)
url <- "http://maps.google.com/maps/api/geocode/json?address="
url <- URLencode(paste(url, address, "&sensor=false", sep = ""))
x <- fromJSON(url, simplify = FALSE)
if (x$status == "OK") {
out <- c(x$results[[1]]$geometry$location$lng,
x$results[[1]]$geometry$location$lat)
} else {
out <- NA
}
Sys.sleep(0.2)  # API only allows 5 requests per second
out
}
geocodeAdddress("NuriPaşa, İstanbul")
library(RJSONIO)
geocodeAdddress("Sariyer, İstanbul")
geocodeAdddress("Sarıyer, İstanbul")
geocodeAdddress("Sarıyer,İstanbul")
geocodeAdddress("Sarıyer,İstanbul")
geocodeAdddress("Sarıyer, İstanbul")
geocodeAdddress("Sarıyer, İstanbul")
geocodeAdddress("Sarıyer, İstanbul")
devtools::install_github("hrbrmstr/nominatim")
install.packages("nominatim")
geocodeAdddress("Taksim, Istanbul")
install.packages("devtools")
devtools::install_github("hrbrmstr/nominatim")
?nominatim
library(nominatim)
osm_geocode(c("Sarıyer, İstanbul, Türkiye",
"1600 Amphitheatre Parkway, Mountain View, CA",
"Seattle, Washington"))
osm_geocode(c("1600 Pennsylvania Ave, Washington, DC.",
"1600 Amphitheatre Parkway, Mountain View, CA",
"Seattle, Washington"))
packageVersion("nominatim")
rm(nominatim)
library(ggmap)
install.packages("ggmap")
remove.packages("nominatim")
remove.packages(lib = "nominatim")
remove.packages("nominatim")
library(nominatim)
remove.packages("nominatim")
addresses=c("Nuripaşa Mah.No:73, Zeytinburnu, İstanbul","NuriPaşa Mah., Zeytinburnu, İstanbul")
getGeoDetails = function(address){
geo_reply = geocode(address, output='all', messaging=TRUE, override_limit=TRUE)
answer = data.frame(lat=NA, long=NA, accuracy=NA, formatted_address=NA, address_type=NA, status=NA)
answer$status = geo_reply$status
while(geo_reply$status == "OVER_QUERY_LIMIT"){
print("OVER QUERY LIMIT - Pausing for 1 hour at:")
time = Sys.time()
print(as.character(time))
Sys.sleep(60*60)
geo_reply = geocode(address, output='all', messaging=TRUE, override_limit=TRUE)
answer$status = geo_reply$status
}
if (geo_reply$status != "OK"){
return(answer)
}
#else extract
answer$lat = geo_reply$results[[1]]$geometry$location$lat
answer$long = geo_reply$results[[1]]$geometry$location$lng
if (length(geo_reply$results[[1]]$types) > 0){
answer$accuracy = geo_reply$results[[1]]$types[[1]]
}
answer$address_type = paste(geo_reply$results[[1]]$types, collapse=',')
answer$formatted_address = geo_reply$results[[1]]$formatted_address
return(answer)
}
addresses=c("Nuripaşa Mah.No:73, Zeytinburnu, İstanbul","NuriPaşa Mah., Zeytinburnu, İstanbul")
getGeoDetails = function(address){
geo_reply = geocode(address, output='all', messaging=TRUE, override_limit=TRUE)
answer = data.frame(lat=NA, long=NA, accuracy=NA, formatted_address=NA, address_type=NA, status=NA)
answer$status = geo_reply$status
while(geo_reply$status == "OVER_QUERY_LIMIT"){
print("OVER QUERY LIMIT - Pausing for 1 hour at:")
time = Sys.time()
print(as.character(time))
Sys.sleep(60*60)
geo_reply = geocode(address, output='all', messaging=TRUE, override_limit=TRUE)
answer$status = geo_reply$status
}
if (geo_reply$status != "OK"){
return(answer)
}
#else extract
answer$lat = geo_reply$results[[1]]$geometry$location$lat
answer$long = geo_reply$results[[1]]$geometry$location$lng
if (length(geo_reply$results[[1]]$types) > 0){
answer$accuracy = geo_reply$results[[1]]$types[[1]]
}
answer$address_type = paste(geo_reply$results[[1]]$types, collapse=',')
answer$formatted_address = geo_reply$results[[1]]$formatted_address
return(answer)
}
getwd
getwd()
setwd(C:/Users/VOLTAC/Desktop/DEMO/3d-heatmap/data)
setwd('C:/Users/VOLTAC/Desktop/DEMO/3d-heatmap/data')
ls
deneme=read.csv('COORdata.csv')
bir=deneme[deneme$hour==1,]
iki=deneme[deneme$hour==2,]
uc=deneme[deneme$hour==3,]
dort=deneme[deneme$hour==4,]
bes=deneme[deneme$hour==5,]
alti=deneme[deneme$hour==6,]
yedi=deneme[deneme$hour==7,]
sekiz=deneme[deneme$hour==8,]
dokuz=deneme[deneme$hour==9,]
on=deneme[deneme$hour==10,]
onbir=deneme[deneme$hour==11,]
x1=bir
x2=iki
x3=uc
x4=dort
x5=bes
x6=alti
x7=yedi
x8=sekiz
x9=dokuz
x10=on
x11=onbir
rm(bir,iki,uc,dort,bes,alti,yedi,sekiz,dokuz,on,onbir)
x12=deneme[deneme$hour==12,]
x13=deneme[deneme$hour==13,]
x14=deneme[deneme$hour==14,]
x15=deneme[deneme$hour==15,]
x16=deneme[deneme$hour==16,]
x17=deneme[deneme$hour==17,]
x18=deneme[deneme$hour==18,]
x19=deneme[deneme$hour==19,]
x20=deneme[deneme$hour==20,]
x21=deneme[deneme$hour==21,]
x22=deneme[deneme$hour==22,]
x23=deneme[deneme$hour==23,]
x0=deneme[deneme$hour==0,]
ls
lm
for (i in 1:9){print(x+'i')}
for (i in 1:9){print('x'+i)}
for (i in 1:9){print(paste('x',i))}
for (i in 1:9){paste('x',i)}
for (i in 1:9){paste('x',i)}
